{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 errors (unauthorized)\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth service\nexport const authService = {\n  login: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/token`, new URLSearchParams({\n        username,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/users/me');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\n\n// Agents service\nexport const agentsService = {\n  getAgents: async () => {\n    try {\n      const response = await api.get('/agents');\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  getAgent: async agentId => {\n    try {\n      const response = await api.get(`/agents/${agentId}`);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  createAgent: async agentData => {\n    try {\n      const response = await api.post('/agents', agentData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateAgent: async (agentId, agentData) => {\n    try {\n      const response = await api.put(`/agents/${agentId}`, agentData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  deleteAgent: async agentId => {\n    try {\n      await api.delete(`/agents/${agentId}`);\n      return true;\n    } catch (error) {\n      throw error;\n    }\n  },\n  queryAgent: async (agentId, query, parameters = {}) => {\n    try {\n      const response = await api.post(`/agents/${agentId}/query`, {\n        query,\n        parameters\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  uploadDocument: async (agentId, file, collectionName = null) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (collectionName) {\n        formData.append('collection_name', collectionName);\n      }\n      const response = await api.post(`/agents/${agentId}/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","authService","login","username","password","post","URLSearchParams","data","register","userData","getCurrentUser","get","agentsService","getAgents","getAgent","agentId","createAgent","agentData","updateAgent","put","deleteAgent","delete","queryAgent","query","parameters","uploadDocument","file","collectionName","formData","FormData","append"],"sources":["C:/Users/rsrin/OneDrive/Documents/Project Repository/third-eye/agentic-ai-platform/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle 401 errors (unauthorized)\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth service\r\nexport const authService = {\r\n  login: async (username, password) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_URL}/auth/token`,\r\n        new URLSearchParams({\r\n          username,\r\n          password,\r\n        }),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  register: async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getCurrentUser: async () => {\r\n    try {\r\n      const response = await api.get('/users/me');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\n// Agents service\r\nexport const agentsService = {\r\n  getAgents: async () => {\r\n    try {\r\n      const response = await api.get('/agents');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getAgent: async (agentId) => {\r\n    try {\r\n      const response = await api.get(`/agents/${agentId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  createAgent: async (agentData) => {\r\n    try {\r\n      const response = await api.post('/agents', agentData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  updateAgent: async (agentId, agentData) => {\r\n    try {\r\n      const response = await api.put(`/agents/${agentId}`, agentData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  deleteAgent: async (agentId) => {\r\n    try {\r\n      await api.delete(`/agents/${agentId}`);\r\n      return true;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  queryAgent: async (agentId, query, parameters = {}) => {\r\n    try {\r\n      const response = await api.post(`/agents/${agentId}/query`, {\r\n        query,\r\n        parameters,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  uploadDocument: async (agentId, file, collectionName = null) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      if (collectionName) {\r\n        formData.append('collection_name', collectionName);\r\n      }\r\n      \r\n      const response = await api.post(`/agents/${agentId}/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}